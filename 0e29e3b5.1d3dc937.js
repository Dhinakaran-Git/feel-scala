(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{180:function(e,r,n){"use strict";n.d(r,"a",(function(){return f})),n.d(r,"b",(function(){return d}));var t=n(0),a=n.n(t);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function c(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?c(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var r=a.a.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},f=function(e){var r=u(e.components);return a.a.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},b=a.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=u(n),b=t,d=f["".concat(c,".").concat(b)]||f[b]||p[b]||o;return n?a.a.createElement(d,l(l({ref:r},s),{},{components:n})):a.a.createElement(d,l({ref:r},s))}));function d(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,c=new Array(o);c[0]=b;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:t,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},69:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return c})),n.d(r,"metadata",(function(){return l})),n.d(r,"toc",(function(){return i})),n.d(r,"default",(function(){return u}));var t=n(3),a=n(7),o=(n(0),n(180)),c={id:"feel-expressions-introduction",title:"Introduction"},l={unversionedId:"reference/language-guide/feel-expressions-introduction",id:"reference/language-guide/feel-expressions-introduction",isDocsHomePage:!1,title:"Introduction",description:"FEEL expressions are powerful and can be used for various cases.",source:"@site/docs/reference/language-guide/feel-expressions-introduction.md",slug:"/reference/language-guide/feel-expressions-introduction",permalink:"/feel-scala/docs/reference/language-guide/feel-expressions-introduction",editUrl:"https://github.com/camunda/feel-scala/edit/master/docs/docs/reference/language-guide/feel-expressions-introduction.md",version:"current",sidebar:"Reference",previous:{title:"Unary-Tests",permalink:"/feel-scala/docs/reference/language-guide/feel-unary-tests"},next:{title:"Boolean Expressions",permalink:"/feel-scala/docs/reference/language-guide/feel-boolean-expressions"}},i=[],s={toc:i};function u(e){var r=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},s,n,{components:r,mdxType:"MDXLayout"}),Object(o.b)("p",null,"FEEL expressions are powerful and can be used for various cases."),Object(o.b)("p",null,"For a better overview, this section is split into expressions based on their operational data type:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-boolean-expressions"}),"Boolean")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-string-expressions"}),"String")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-numeric-expressions"}),"Numeric")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-list-expressions"}),"List")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-context-expressions"}),"Context")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-temporal-expressions"}),"Temporal"))),Object(o.b)("p",null,"The following sections cover more general areas that are not restricted to one data type:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-variables"}),"Variables")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-control-flow"}),"Control Flow")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(t.a)({parentName:"li"},{href:"/feel-scala/docs/reference/language-guide/feel-functions"}),"Functions"))))}u.isMDXComponent=!0}}]);