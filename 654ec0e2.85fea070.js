(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{104:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(181)),s={id:"list-samples",title:"List Samples"},l={unversionedId:"samples/list-samples",id:"samples/list-samples",isDocsHomePage:!1,title:"List Samples",description:"Filter a List and Return the First Element",source:"@site/docs/samples/list-samples.md",slug:"/samples/list-samples",permalink:"/feel-scala/docs/samples/list-samples",editUrl:"https://github.com/camunda/feel-scala/edit/master/docs/docs/samples/list-samples.md",version:"current",sidebar:"Samples",previous:{title:"Temporal Samples",permalink:"/feel-scala/docs/samples/temporal-samples"},next:{title:"Context Samples",permalink:"/feel-scala/docs/samples/context-samples"}},o=[{value:"Filter a List and Return the First Element",id:"filter-a-list-and-return-the-first-element",children:[]},{value:"Group a List",id:"group-a-list",children:[]},{value:"Merge two Lists",id:"merge-two-lists",children:[]}],c={toc:o};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"filter-a-list-and-return-the-first-element"},"Filter a List and Return the First Element"),Object(i.b)("p",null,'Return the first packaging element which unit is "Palette".'),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'(data.attribute.packaging[unit = "Palette"])[1]\n')),Object(i.b)("h2",{id:"group-a-list"},"Group a List"),Object(i.b)("p",null,"Group the given list of invoices by their person. "),Object(i.b)("p",null,"Each invoice has a person. The persons are extracted from the invoices and are used as a filter for the list."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"for p in distinct values(invoices.person) return invoices[person = p]\n")),Object(i.b)("p",null,"Input:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'{"invoices":[\n  {"id":1, "person":"A", "amount": 10},\n  {"id":2, "person":"A", "amount": 20},\n  {"id":3, "person":"A", "amount": 30},\n  {"id":4, "person":"A", "amount": 40},\n  {"id":5, "person":"B", "amount": 15},\n  {"id":6, "person":"B", "amount": 25}\n]}\n')),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'[\n  [\n    {"id":1, "person":"A", "amount": 10},\n    {"id":2, "person":"A", "amount": 20},\n    {"id":3, "person":"A", "amount": 30},\n    {"id":4, "person":"A", "amount": 40}\n  ],\n  [\n    {"id":5, "person":"B", "amount": 15},\n    {"id":6, "person":"B", "amount": 25}\n  ]\n]\n')),Object(i.b)("h2",{id:"merge-two-lists"},"Merge two Lists"),Object(i.b)("p",null,'Merge two given lists. Each list contains context values with the same structure. Each context has\nan entry "id" that identifies the value.'),Object(i.b)("p",null,"The result is a list that contains all context values grouped by the identifier."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"})," {\n   ids: union(x.files.id,y.files.id),\n   getById: function (files,fileId) \n     if (count(files[id=fileId]) > 0) \n     then files[id=fileId][1] \n     else {},\n   merge: for id in ids return put all(getById(x.files, id), getById(y.files, id))\n }.merge\n")),Object(i.b)("p",null,"Input:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'{\n  "x": {"files": [\n    {"id":1, "content":"a"},\n    {"id":2, "content":"b"}\n  ]},\n  "y": {"files": [\n    {"id":1, "content":"a2"},\n    {"id":3, "content":"c"}\n  ]} \n }\n')),Object(i.b)("p",null,"Output: "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'[\n  {"id":1, "content":"a2"},\n  {"id":2, "content":"b"},\n  {"id":3, "content":"c"}\n]\n')))}p.isMDXComponent=!0},181:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,b=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.a.createElement(b,l(l({ref:t},c),{},{components:n})):a.a.createElement(b,l({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);