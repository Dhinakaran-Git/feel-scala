"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[8543],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||l;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4427:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={id:"feel-built-in-functions-temporal",title:"Temporal functions",description:"This document outlines built-in temporal functions and examples."},i=void 0,o={unversionedId:"reference/builtin-functions/feel-built-in-functions-temporal",id:"version-1.15/reference/builtin-functions/feel-built-in-functions-temporal",title:"Temporal functions",description:"This document outlines built-in temporal functions and examples.",source:"@site/versioned_docs/version-1.15/reference/builtin-functions/feel-built-in-functions-temporal.md",sourceDirName:"reference/builtin-functions",slug:"/reference/builtin-functions/feel-built-in-functions-temporal",permalink:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-temporal",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/main/docs/versioned_docs/version-1.15/reference/builtin-functions/feel-built-in-functions-temporal.md",tags:[],version:"1.15",frontMatter:{id:"feel-built-in-functions-temporal",title:"Temporal functions",description:"This document outlines built-in temporal functions and examples."},sidebar:"version-1.15/Reference",previous:{title:"Context functions",permalink:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-context"},next:{title:"Range functions",permalink:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-range"}},u={},s=[{value:"now()",id:"now",level:2},{value:"today()",id:"today",level:2},{value:"day of week()",id:"day-of-week",level:2},{value:"day of year()",id:"day-of-year",level:2},{value:"week of year()",id:"week-of-year",level:2},{value:"month of year()",id:"month-of-year",level:2},{value:"abs()",id:"abs",level:2}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"now"},"now()"),(0,r.kt)("p",null,"Returns the current date and time including the timezone."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"parameters: no"),(0,r.kt)("li",{parentName:"ul"},"result: date-time with timezone")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'now()\n// date and time("2020-07-31T14:27:30@Europe/Berlin")\n')),(0,r.kt)("h2",{id:"today"},"today()"),(0,r.kt)("p",null,"Returns the current date."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"parameters: no"),(0,r.kt)("li",{parentName:"ul"},"result: date")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'today()\n// date("2020-07-31")\n')),(0,r.kt)("h2",{id:"day-of-week"},"day of week()"),(0,r.kt)("p",null,"Returns the day of the week according to the Gregorian calendar. Note that it always returns the English name of the day."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"parameters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"date"),": date/date-time"))),(0,r.kt)("li",{parentName:"ul"},"result: string")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'day of week(date("2019-09-17"))\n// "Tuesday"\n')),(0,r.kt)("h2",{id:"day-of-year"},"day of year()"),(0,r.kt)("p",null,"Returns the Gregorian number of the day within the year."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"parameters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"date"),": date/date-time"))),(0,r.kt)("li",{parentName:"ul"},"result: number")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'day of year(date("2019-09-17"))\n// 260\n')),(0,r.kt)("h2",{id:"week-of-year"},"week of year()"),(0,r.kt)("p",null,"Returns the Gregorian number of the week within the year, according to ISO 8601."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"parameters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"date"),": date/date-time"))),(0,r.kt)("li",{parentName:"ul"},"result: number")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'week of year(date("2019-09-17"))\n// 38\n')),(0,r.kt)("h2",{id:"month-of-year"},"month of year()"),(0,r.kt)("p",null,"Returns the month of the week according to the Gregorian calendar. Note that it always returns the English name of the month."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"parameters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"date"),": date/date-time"))),(0,r.kt)("li",{parentName:"ul"},"result: string")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'month of year(date("2019-09-17"))\n// "September"\n')),(0,r.kt)("h2",{id:"abs"},"abs()"),(0,r.kt)("p",null,"Returns the absolute value of a given duration."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"parameters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"n"),": days-time-duration/years-months-duration"))),(0,r.kt)("li",{parentName:"ul"},"result: duration")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'abs(duration("-PT5H"))\n// "duration("PT5H")"\n\nabs(duration("PT5H"))\n// "duration("PT5H")"\n\nabs(duration("-P2M"))\n// duration("P2M")\n')))}p.isMDXComponent=!0}}]);