"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[1800],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(t),f=l,g=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function f(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1299:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=t(7462),l=(t(7294),t(3905));const a={id:"feel-error-handling",title:"Error handling",description:"This document outlines the error handling."},i=void 0,o={unversionedId:"reference/language-guide/feel-error-handling",id:"reference/language-guide/feel-error-handling",title:"Error handling",description:"This document outlines the error handling.",source:"@site/docs/reference/language-guide/feel-error-handling.md",sourceDirName:"reference/language-guide",slug:"/reference/language-guide/feel-error-handling",permalink:"/feel-scala/docs/next/reference/language-guide/feel-error-handling",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/main/docs/docs/reference/language-guide/feel-error-handling.md",tags:[],version:"current",frontMatter:{id:"feel-error-handling",title:"Error handling",description:"This document outlines the error handling."},sidebar:"Reference",previous:{title:"Functions",permalink:"/feel-scala/docs/next/reference/language-guide/feel-functions"},next:{title:"Introduction",permalink:"/feel-scala/docs/next/reference/builtin-functions/feel-built-in-functions-introduction"}},u={},s=[{value:"Null-friendly",id:"null-friendly",level:3},{value:"Handle null values",id:"handle-null-values",level:3},{value:"Assertions",id:"assertions",level:3}],c={toc:s};function p(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"FEEL doesn't define any error handling. Instead, it follows one simple rule: if something\ngoes wrong, return ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),". "),(0,l.kt)("h3",{id:"null-friendly"},"Null-friendly"),(0,l.kt)("p",null,"If an expression can't be evaluated successfully, it returns ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),". "),(0,l.kt)("p",null,"For example, in the following cases:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"No variable exists with the given name"),(0,l.kt)("li",{parentName:"ul"},"No context entry exists with the given key"),(0,l.kt)("li",{parentName:"ul"},"No function exists with the given name "),(0,l.kt)("li",{parentName:"ul"},"A function can't be invoked successfully with the given arguments"),(0,l.kt)("li",{parentName:"ul"},"A value is compared to another value of a different type"),(0,l.kt)("li",{parentName:"ul"},"An operation is not defined for the given values")),(0,l.kt)("h3",{id:"handle-null-values"},"Handle null values"),(0,l.kt)("p",null,"Expressions and operators can deal with ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," values. In many cases, they result also in ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"a.b > 10\n// null\n\n[{a: 1}, {b: 2}].a\n// [1, null]    \n    \n[{a: 1}, {b: 2}][a < 10]\n// [{a: 1}]\n")),(0,l.kt)("p",null,"To handle ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," values explicitly, use a ",(0,l.kt)("a",{parentName:"p",href:"feel-boolean-expressions#null-check"},"null-check")," or the\nfunction ",(0,l.kt)("a",{parentName:"p",href:"../builtin-functions/feel-built-in-functions-boolean#get-or-elsevalue-default"},"get or else()"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'a != null and a.b > 10 \n\nget or else(a, "prio-99")\n')),(0,l.kt)("h3",{id:"assertions"},"Assertions"),(0,l.kt)("p",null,"By default, the evaluation of an expression doesn't fail but returns ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),". If there is a special\nneed to fail the evaluation under a certain condition, use the\nfunction ",(0,l.kt)("a",{parentName:"p",href:"../builtin-functions/feel-built-in-functions-boolean#assertvalue-condition"},"assert()"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"assert(a, a != null)\n// returns a if a is not null\n// fails if a is null\n\nassert(b, b >= 0, \"'b' should be positive\")\n")))}p.isMDXComponent=!0}}]);