"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[4802],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,k=d["".concat(s,".").concat(f)]||d[f]||p[f]||r;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3242:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);const o=()=>a.createElement("p",null,a.createElement("span",{style:{backgroundColor:"#FC5D0D",borderRadius:"7px",color:"#fff",padding:"0.2rem",marginRight:"0.5rem"},title:"This feature is not part of the official DMN standard. It is an extension from Camunda's implementation."},"Camunda Extension"))},3002:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var a=n(7462),o=(n(7294),n(3905)),r=n(3242);const l={id:"feel-built-in-functions-context",title:"Context functions",description:"This document outlines context functions and a few examples."},i=void 0,s={unversionedId:"reference/builtin-functions/feel-built-in-functions-context",id:"version-1.17/reference/builtin-functions/feel-built-in-functions-context",title:"Context functions",description:"This document outlines context functions and a few examples.",source:"@site/versioned_docs/version-1.17/reference/builtin-functions/feel-built-in-functions-context.md",sourceDirName:"reference/builtin-functions",slug:"/reference/builtin-functions/feel-built-in-functions-context",permalink:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-context",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/main/docs/versioned_docs/version-1.17/reference/builtin-functions/feel-built-in-functions-context.md",tags:[],version:"1.17",frontMatter:{id:"feel-built-in-functions-context",title:"Context functions",description:"This document outlines context functions and a few examples."},sidebar:"Reference",previous:{title:"List functions",permalink:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-list"},next:{title:"Temporal functions",permalink:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-temporal"}},c={},u=[{value:"get value(context, key)",id:"get-valuecontext-key",level:2},{value:"get value(context, keys)",id:"get-valuecontext-keys",level:2},{value:"get entries(context)",id:"get-entriescontext",level:2},{value:"context put(context, key, value)",id:"context-putcontext-key-value",level:2},{value:"context put(context, keys, value)",id:"context-putcontext-keys-value",level:2},{value:"context merge(contexts)",id:"context-mergecontexts",level:2}],p={toc:u};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"get-valuecontext-key"},"get value(context, key)"),(0,o.kt)("p",null,"Returns the value of the context entry with the given key."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Function signature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"get value(context: context, key: string): Any\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Examples")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'get value({foo: 123}, "foo") \n// 123\n\nget value({a: 1}, "b")\n// null\n')),(0,o.kt)("h2",{id:"get-valuecontext-keys"},"get value(context, keys)"),(0,o.kt)(r.Z,{mdxType:"MarkerCamundaExtension"}),(0,o.kt)("p",null,"Returns the value of the context entry for a context path defined by the given keys."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"keys")," contains the keys ",(0,o.kt)("inlineCode",{parentName:"p"},"[k1, k2]")," then it returns the value at the nested entry ",(0,o.kt)("inlineCode",{parentName:"p"},"k1.k2")," of the context."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"keys")," are empty or the nested entry defined by the keys doesn't exist in the context, it returns ",(0,o.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Function signature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"get value(context: context, keys: list<string>): Any\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Examples")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'get value({x:1, y: {z:0}}, ["y", "z"]) \n// 0\n\nget value({x: {y: {z:0}}}, ["x", "y"])\n// {z:0}\n\nget value({a: {b: 3}}, ["b"])\n// null\n')),(0,o.kt)("h2",{id:"get-entriescontext"},"get entries(context)"),(0,o.kt)("p",null,"Returns the entries of the context as a list of key-value-pairs."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Function signature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"get entries(context: context): list<context>\n")),(0,o.kt)("p",null,'The return value is a list of contexts. Each context contains two entries for "key" and "value".'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Examples")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'get entries({foo: 123})\n// [{key: "foo", value: 123}]\n')),(0,o.kt)("h2",{id:"context-putcontext-key-value"},"context put(context, key, value)"),(0,o.kt)("p",null,"Adds a new entry with the given key and value to the context. Returns a new context that includes the entry."),(0,o.kt)("p",null,"If an entry for the same key already exists in the context, it overrides the value."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Function signature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"context put(context: context, key: string, value: Any): context\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Examples")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'context put({x:1}, "y", 2)\n// {x:1, y:2}\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The function ",(0,o.kt)("inlineCode",{parentName:"p"},"context put()")," replaced the previous function ",(0,o.kt)("inlineCode",{parentName:"p"},"put()")," (Camunda Extension). The\nprevious function is deprecated and should not be used anymore.")),(0,o.kt)("h2",{id:"context-putcontext-keys-value"},"context put(context, keys, value)"),(0,o.kt)("p",null,"Adds a new entry with the given value to the context. The path of the entry is defined by the keys. Returns a new context that includes the entry. "),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"keys")," contains the keys ",(0,o.kt)("inlineCode",{parentName:"p"},"[k1, k2]")," then it adds the nested entry ",(0,o.kt)("inlineCode",{parentName:"p"},"k1.k2 = value")," to the context."),(0,o.kt)("p",null,"If an entry for the same keys already exists in the context, it overrides the value."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"keys")," are empty, it returns ",(0,o.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Function signature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"context put(context: context, keys: list<string>, value: Any): context\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Examples")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'context put({x:1}, ["y"], 2)\n// {x:1, y:2}\n\ncontext put({x:1, y: {z:0}}, ["y", "z"], 2)\n// {x:1, y: {z:2}}\n\ncontext put({x:1}, ["y", "z"], 2)\n// {x:1, y: {z:2}}\n')),(0,o.kt)("h2",{id:"context-mergecontexts"},"context merge(contexts)"),(0,o.kt)("p",null,"Union the given contexts. Returns a new context that includes all entries of the given contexts. "),(0,o.kt)("p",null,"If an entry for the same key already exists in a context, it overrides the value. The entries are overridden in the same order as in the list of contexts."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Function signature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"context merge(contexts: list<context>): context\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Examples")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"context merge([{x:1}, {y:2}])\n// {x:1, y:2}\n\ncontext merge([{x:1, y: 0}, {y:2}])\n// {x:1, y:2}\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The function ",(0,o.kt)("inlineCode",{parentName:"p"},"context merge()")," replaced the previous function ",(0,o.kt)("inlineCode",{parentName:"p"},"put all()")," (Camunda Extension). The\nprevious function is deprecated and should not be used anymore.")))}d.isMDXComponent=!0}}]);