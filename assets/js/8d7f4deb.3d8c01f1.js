"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[4177],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=m(n),c=r,f=p["".concat(s,".").concat(c)]||p[c]||d[c]||i;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3242:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294);const r=()=>a.createElement("p",null,a.createElement("span",{style:{backgroundColor:"#FC5D0D",borderRadius:"7px",color:"#fff",padding:"0.2rem",marginRight:"0.5rem"},title:"This feature is not part of the official DMN standard. It is an extension from Camunda's implementation."},"Camunda Extension"))},6763:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(7462),r=(n(7294),n(3905)),i=n(3242);const o={id:"feel-built-in-functions-conversion",title:"Conversion functions",description:"This document outlines conversion functions and a few examples."},l=void 0,s={unversionedId:"reference/builtin-functions/feel-built-in-functions-conversion",id:"version-1.16/reference/builtin-functions/feel-built-in-functions-conversion",title:"Conversion functions",description:"This document outlines conversion functions and a few examples.",source:"@site/versioned_docs/version-1.16/reference/builtin-functions/feel-built-in-functions-conversion.md",sourceDirName:"reference/builtin-functions",slug:"/reference/builtin-functions/feel-built-in-functions-conversion",permalink:"/feel-scala/docs/1.16/reference/builtin-functions/feel-built-in-functions-conversion",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/main/docs/versioned_docs/version-1.16/reference/builtin-functions/feel-built-in-functions-conversion.md",tags:[],version:"1.16",frontMatter:{id:"feel-built-in-functions-conversion",title:"Conversion functions",description:"This document outlines conversion functions and a few examples."},sidebar:"Reference",previous:{title:"Introduction",permalink:"/feel-scala/docs/1.16/reference/builtin-functions/feel-built-in-functions-introduction"},next:{title:"Boolean functions",permalink:"/feel-scala/docs/1.16/reference/builtin-functions/feel-built-in-functions-boolean"}},m={},u=[{value:"string(from)",id:"stringfrom",level:2},{value:"number(from)",id:"numberfrom",level:2},{value:"context(entries)",id:"contextentries",level:2},{value:"date(from)",id:"datefrom",level:2},{value:"date(year, month, day)",id:"dateyear-month-day",level:2},{value:"time(from)",id:"timefrom",level:2},{value:"time(hour, minute, second)",id:"timehour-minute-second",level:2},{value:"time(hour, minute, second, offset)",id:"timehour-minute-second-offset",level:2},{value:"date and time(from)",id:"date-and-timefrom",level:2},{value:"date and time(date, time)",id:"date-and-timedate-time",level:2},{value:"date and time(date, timezone)",id:"date-and-timedate-timezone",level:2},{value:"duration(from)",id:"durationfrom",level:2},{value:"years and months duration(from, to)",id:"years-and-months-durationfrom-to",level:2}],d={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Convert a value into a different type."),(0,r.kt)("h2",{id:"stringfrom"},"string(from)"),(0,r.kt)("p",null,"Returns the given value as a string representation."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"string(from: Any): string\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'string(1.1) \n// "1.1"\n\nstring(date("2012-12-25"))\n// "2012-12-25"\n')),(0,r.kt)("h2",{id:"numberfrom"},"number(from)"),(0,r.kt)("p",null,"Parses the given string to a number."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"number(from: string): number\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'number("1500.5") \n// 1500.5\n')),(0,r.kt)("h2",{id:"contextentries"},"context(entries)"),(0,r.kt)("p",null,"Constructs a context of the given list of key-value pairs. It is the reverse function to ",(0,r.kt)("a",{parentName:"p",href:"/feel-scala/docs/1.16/reference/builtin-functions/feel-built-in-functions-context#get-entriescontext"},"get entries()"),"."),(0,r.kt)("p",null,"Each key-value pair must be a context with two entries: ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),". The entry with name ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," must have a value of the type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,r.kt)("p",null,"It might override context entries if the keys are equal. The entries are overridden in the same order as the contexts in the given list."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," if one of the entries is not a context or if a context doesn't contain the required entries."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"context(entries: list<context>): context\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'context([{"key":"a", "value":1}, {"key":"b", "value":2}])\n// {"a":1, "b":2}\n')),(0,r.kt)("h2",{id:"datefrom"},"date(from)"),(0,r.kt)("p",null,"Returns a date from the given value."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"date(from: string): date\n")),(0,r.kt)("p",null,"Parses the given string into a date."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"date(from: date and time): date\n")),(0,r.kt)("p",null,"Extracts the date component from the given date and time."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'date("2018-04-29") \n// date("2018-04-29")\n\ndate(date and time("2012-12-25T11:00:00"))\n// date("2012-12-25")\n')),(0,r.kt)("h2",{id:"dateyear-month-day"},"date(year, month, day)"),(0,r.kt)("p",null,"Returns a date from the given components."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"date(year: number, month: number, day: number): date\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'date(2012, 12, 25)\n// date("2012-12-25")\n')),(0,r.kt)("h2",{id:"timefrom"},"time(from)"),(0,r.kt)("p",null,"Returns a time from the given value."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"time(from: string): time\n")),(0,r.kt)("p",null,"Parses the given string into a time."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"time(from: date and time): time\n")),(0,r.kt)("p",null,"Extracts the time component from the given date and time."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'time("12:00:00") \n// time("12:00:00")\n\ntime(date and time("2012-12-25T11:00:00"))\n// time("11:00:00")\n')),(0,r.kt)("h2",{id:"timehour-minute-second"},"time(hour, minute, second)"),(0,r.kt)("p",null,"Returns a time from the given components."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"time(hour: number, minute: number, second: number): time\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'time(23, 59, 0)\n// time("23:59:00")\n')),(0,r.kt)("h2",{id:"timehour-minute-second-offset"},"time(hour, minute, second, offset)"),(0,r.kt)("p",null,"Returns a time from the given components, including a timezone offset."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"time(hour: number, minute: number, second: number, offset: days and time duration): time\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'time(14, 30, 0, duration("PT1H"))\n// time("14:30:00+01:00")\n')),(0,r.kt)("h2",{id:"date-and-timefrom"},"date and time(from)"),(0,r.kt)("p",null,"Parses the given string into a date and time."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"date and time(from: string): date and time\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'date and time("2018-04-29T009:30:00") \n// date and time("2018-04-29T009:30:00")\n')),(0,r.kt)("h2",{id:"date-and-timedate-time"},"date and time(date, time)"),(0,r.kt)("p",null,"Returns a date and time from the given components."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"date and time(date: date, time: time): date and time\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"date and time(date: date and time, time: time): date and time\n")),(0,r.kt)("p",null,"Returns a date and time value that consists of the date component of ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," combined with ",(0,r.kt)("inlineCode",{parentName:"p"},"time"),". "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'date and time(date("2012-12-24"),time("T23:59:00")) \n// date and time("2012-12-24T23:59:00")\n\ndate and time(date and time("2012-12-25T11:00:00"),time("T23:59:00"))\n// date and time("2012-12-25T23:59:00")\n')),(0,r.kt)("h2",{id:"date-and-timedate-timezone"},"date and time(date, timezone)"),(0,r.kt)(i.Z,{mdxType:"MarkerCamundaExtension"}),(0,r.kt)("p",null,"Returns the given date and time value at the given timezone."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," has a different timezone than ",(0,r.kt)("inlineCode",{parentName:"p"},"timezone")," then it adjusts the time to match the local time of ",(0,r.kt)("inlineCode",{parentName:"p"},"timezone"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"date and time(date: date and time, timezone: string): date and time\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'date and time(@"2020-07-31T14:27:30@Europe/Berlin", "America/Los_Angeles")\n// date and time("2020-07-31T05:27:30@America/Los_Angeles")\n\ndate and time(@"2020-07-31T14:27:30", "Z")\n// date and time("2020-07-31T12:27:30Z")\n')),(0,r.kt)("h2",{id:"durationfrom"},"duration(from)"),(0,r.kt)("p",null,"Parses the given string into a duration. The duration is either a days and time duration or a years and months duration."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"duration(from: string): days and time duration\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"duration(from: string): years and months duration\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'duration("P5D")\n// duration("P5D")\n\nduration("P32Y")\n// duration("P32Y")\n')),(0,r.kt)("h2",{id:"years-and-months-durationfrom-to"},"years and months duration(from, to)"),(0,r.kt)("p",null,"Returns the years and months duration between ",(0,r.kt)("inlineCode",{parentName:"p"},"from")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"to"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"years and months duration(from: date, to: date): years and months duration\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'years and months duration(date("2011-12-22"), date("2013-08-24"))\n// duration("P1Y8M")\n')))}p.isMDXComponent=!0}}]);