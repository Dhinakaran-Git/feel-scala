"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[6389],{8021:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"1.14","label":"1.14","banner":null,"badge":true,"className":"docs-version-1.14","isLast":false,"docsSidebars":{"version-1.14/Reference":[{"type":"link","label":"Get Started","href":"/feel-scala/docs/1.14/reference/","docId":"reference/get-started"},{"type":"link","label":"What is FEEL?","href":"/feel-scala/docs/1.14/reference/what-is-feel","docId":"reference/what-is-feel"},{"collapsed":true,"type":"category","label":"Language Guide","items":[{"type":"link","label":"Introduction","href":"/feel-scala/docs/1.14/reference/language-guide/language-guide-introduction","docId":"reference/language-guide/language-guide-introduction"},{"type":"link","label":"Data Types","href":"/feel-scala/docs/1.14/reference/language-guide/feel-data-types","docId":"reference/language-guide/feel-data-types"},{"type":"link","label":"Unary-Tests","href":"/feel-scala/docs/1.14/reference/language-guide/feel-unary-tests","docId":"reference/language-guide/feel-unary-tests"},{"collapsed":true,"type":"category","label":"Expressions","items":[{"type":"link","label":"Introduction","href":"/feel-scala/docs/1.14/reference/language-guide/feel-expressions-introduction","docId":"reference/language-guide/feel-expressions-introduction"},{"type":"link","label":"Boolean Expressions","href":"/feel-scala/docs/1.14/reference/language-guide/feel-boolean-expressions","docId":"reference/language-guide/feel-boolean-expressions"},{"type":"link","label":"String Expressions","href":"/feel-scala/docs/1.14/reference/language-guide/feel-string-expressions","docId":"reference/language-guide/feel-string-expressions"},{"type":"link","label":"Numeric Expressions","href":"/feel-scala/docs/1.14/reference/language-guide/feel-numeric-expressions","docId":"reference/language-guide/feel-numeric-expressions"},{"type":"link","label":"List Expressions","href":"/feel-scala/docs/1.14/reference/language-guide/feel-list-expressions","docId":"reference/language-guide/feel-list-expressions"},{"type":"link","label":"Context Expressions","href":"/feel-scala/docs/1.14/reference/language-guide/feel-context-expressions","docId":"reference/language-guide/feel-context-expressions"},{"type":"link","label":"Temporal Expressions","href":"/feel-scala/docs/1.14/reference/language-guide/feel-temporal-expressions","docId":"reference/language-guide/feel-temporal-expressions"},{"type":"link","label":"Variables","href":"/feel-scala/docs/1.14/reference/language-guide/feel-variables","docId":"reference/language-guide/feel-variables"},{"type":"link","label":"Control Flow","href":"/feel-scala/docs/1.14/reference/language-guide/feel-control-flow","docId":"reference/language-guide/feel-control-flow"},{"type":"link","label":"Functions","href":"/feel-scala/docs/1.14/reference/language-guide/feel-functions","docId":"reference/language-guide/feel-functions"}],"collapsible":true},{"collapsed":true,"type":"category","label":"Built-in Functions","items":[{"type":"link","label":"Introduction","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-introduction","docId":"reference/builtin-functions/feel-built-in-functions-introduction"},{"type":"link","label":"Conversion Functions","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-conversion","docId":"reference/builtin-functions/feel-built-in-functions-conversion"},{"type":"link","label":"Boolean Functions","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-boolean","docId":"reference/builtin-functions/feel-built-in-functions-boolean"},{"type":"link","label":"String Functions","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-string","docId":"reference/builtin-functions/feel-built-in-functions-string"},{"type":"link","label":"Numeric Functions","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-numeric","docId":"reference/builtin-functions/feel-built-in-functions-numeric"},{"type":"link","label":"List Functions","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-list","docId":"reference/builtin-functions/feel-built-in-functions-list"},{"type":"link","label":"Context Functions","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-context","docId":"reference/builtin-functions/feel-built-in-functions-context"},{"type":"link","label":"Temporal Functions","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-temporal","docId":"reference/builtin-functions/feel-built-in-functions-temporal"},{"type":"link","label":"Range Functions","href":"/feel-scala/docs/1.14/reference/builtin-functions/feel-built-in-functions-range","docId":"reference/builtin-functions/feel-built-in-functions-range"}],"collapsible":true}],"collapsible":true},{"collapsed":true,"type":"category","label":"Developer Guide","items":[{"type":"link","label":"Introduction","href":"/feel-scala/docs/1.14/reference/developer-guide/developer-guide-introduction","docId":"reference/developer-guide/developer-guide-introduction"},{"type":"link","label":"Bootstrapping","href":"/feel-scala/docs/1.14/reference/developer-guide/bootstrapping","docId":"reference/developer-guide/bootstrapping"},{"type":"link","label":"Function Provider SPI","href":"/feel-scala/docs/1.14/reference/developer-guide/function-provider-spi","docId":"reference/developer-guide/function-provider-spi"},{"type":"link","label":"Value Mapper SPI","href":"/feel-scala/docs/1.14/reference/developer-guide/value-mapper-spi","docId":"reference/developer-guide/value-mapper-spi"},{"type":"link","label":"Clock SPI","href":"/feel-scala/docs/1.14/reference/developer-guide/clock-spi","docId":"reference/developer-guide/clock-spi"}],"collapsible":true}],"version-1.14/Samples":[{"type":"link","label":"Samples","href":"/feel-scala/docs/1.14/samples/","docId":"samples/samples"},{"type":"link","label":"Temporal Samples","href":"/feel-scala/docs/1.14/samples/temporal-samples","docId":"samples/temporal-samples"},{"type":"link","label":"List Samples","href":"/feel-scala/docs/1.14/samples/list-samples","docId":"samples/list-samples"},{"type":"link","label":"Context Samples","href":"/feel-scala/docs/1.14/samples/context-samples","docId":"samples/context-samples"}]},"docs":{"reference/builtin-functions/feel-built-in-functions-boolean":{"id":"reference/builtin-functions/feel-built-in-functions-boolean","title":"Boolean Functions","description":"not()","sidebar":"version-1.14/Reference"},"reference/builtin-functions/feel-built-in-functions-context":{"id":"reference/builtin-functions/feel-built-in-functions-context","title":"Context Functions","description":"get value()","sidebar":"version-1.14/Reference"},"reference/builtin-functions/feel-built-in-functions-conversion":{"id":"reference/builtin-functions/feel-built-in-functions-conversion","title":"Conversion Functions","description":"Convert a value into a different type.","sidebar":"version-1.14/Reference"},"reference/builtin-functions/feel-built-in-functions-introduction":{"id":"reference/builtin-functions/feel-built-in-functions-introduction","title":"Introduction","description":"FEEL includes a lot of built-in functions. These functions can be invoked","sidebar":"version-1.14/Reference"},"reference/builtin-functions/feel-built-in-functions-list":{"id":"reference/builtin-functions/feel-built-in-functions-list","title":"List Functions","description":"list contains()","sidebar":"version-1.14/Reference"},"reference/builtin-functions/feel-built-in-functions-numeric":{"id":"reference/builtin-functions/feel-built-in-functions-numeric","title":"Numeric Functions","description":"decimal()","sidebar":"version-1.14/Reference"},"reference/builtin-functions/feel-built-in-functions-range":{"id":"reference/builtin-functions/feel-built-in-functions-range","title":"Range Functions","description":"A set of functions establish relationships between single scalar values and ranges of such values.","sidebar":"version-1.14/Reference"},"reference/builtin-functions/feel-built-in-functions-string":{"id":"reference/builtin-functions/feel-built-in-functions-string","title":"String Functions","description":"substring()","sidebar":"version-1.14/Reference"},"reference/builtin-functions/feel-built-in-functions-temporal":{"id":"reference/builtin-functions/feel-built-in-functions-temporal","title":"Temporal Functions","description":"now()","sidebar":"version-1.14/Reference"},"reference/developer-guide/bootstrapping":{"id":"reference/developer-guide/bootstrapping","title":"Bootstrapping","description":"The FEEL engine can be integrated in two different ways","sidebar":"version-1.14/Reference"},"reference/developer-guide/clock-spi":{"id":"reference/developer-guide/clock-spi","title":"Clock SPI","description":"The clock is used when accessing the current time while evaluating expressions and unary tests (e.g. the builtin function now()). By default, it uses the system clock.","sidebar":"version-1.14/Reference"},"reference/developer-guide/developer-guide-introduction":{"id":"reference/developer-guide/developer-guide-introduction","title":"Introduction","description":"You can embed the FEEL engine in your application in different ways. Have a look","sidebar":"version-1.14/Reference"},"reference/developer-guide/function-provider-spi":{"id":"reference/developer-guide/function-provider-spi","title":"Function Provider SPI","description":"Functions can be invoked in expressions and unary tests. The engine includes some predefined built-in functions.","sidebar":"version-1.14/Reference"},"reference/developer-guide/value-mapper-spi":{"id":"reference/developer-guide/value-mapper-spi","title":"Value Mapper SPI","description":"The value mapper is used while evaluating expressions and unary tests to","sidebar":"version-1.14/Reference"},"reference/get-started":{"id":"reference/get-started","title":"Get Started","description":"Welcome to the documentation of the FEEL-Scala engine!","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-boolean-expressions":{"id":"reference/language-guide/feel-boolean-expressions","title":"Boolean Expressions","description":"Literal","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-context-expressions":{"id":"reference/language-guide/feel-context-expressions","title":"Context Expressions","description":"Literal","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-control-flow":{"id":"reference/language-guide/feel-control-flow","title":"Control Flow","description":"If Conditions","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-data-types":{"id":"reference/language-guide/feel-data-types","title":"Data Types","description":"FEEL defines the following types.","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-expressions-introduction":{"id":"reference/language-guide/feel-expressions-introduction","title":"Introduction","description":"FEEL expressions are powerful and can be used for various cases.","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-functions":{"id":"reference/language-guide/feel-functions","title":"Functions","description":"Invocation","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-list-expressions":{"id":"reference/language-guide/feel-list-expressions","title":"List Expressions","description":"Literal","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-numeric-expressions":{"id":"reference/language-guide/feel-numeric-expressions","title":"Numeric Expressions","description":"Literal","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-string-expressions":{"id":"reference/language-guide/feel-string-expressions","title":"String Expressions","description":"Literal","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-temporal-expressions":{"id":"reference/language-guide/feel-temporal-expressions","title":"Temporal Expressions","description":"Literal","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-unary-tests":{"id":"reference/language-guide/feel-unary-tests","title":"Unary-Tests","description":"A unary-tests expression is a special kind of boolean expression. It should be used for the input","sidebar":"version-1.14/Reference"},"reference/language-guide/feel-variables":{"id":"reference/language-guide/feel-variables","title":"Variables","description":"Access Variables","sidebar":"version-1.14/Reference"},"reference/language-guide/language-guide-introduction":{"id":"reference/language-guide/language-guide-introduction","title":"Introduction","description":"Everything starts with the Data Types. Read this first to have a better","sidebar":"version-1.14/Reference"},"reference/what-is-feel":{"id":"reference/what-is-feel","title":"What is FEEL?","description":"FEEL (Friendly Enough Expression Language) is a part of","sidebar":"version-1.14/Reference"},"samples/context-samples":{"id":"samples/context-samples","title":"Context Samples","description":"Validate Data","sidebar":"version-1.14/Samples"},"samples/list-samples":{"id":"samples/list-samples","title":"List Samples","description":"Filter a List and Return the First Element","sidebar":"version-1.14/Samples"},"samples/samples":{"id":"samples/samples","title":"Samples","description":"The following pages contains example FEEL expressions to solve common problems.","sidebar":"version-1.14/Samples"},"samples/temporal-samples":{"id":"samples/temporal-samples","title":"Temporal Samples","description":"Compare a Date with Offset","sidebar":"version-1.14/Samples"}}}')}}]);