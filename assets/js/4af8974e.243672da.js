"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[3961],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||l;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5211:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={id:"feel-built-in-functions-temporal",title:"Temporal Functions"},i=void 0,o={unversionedId:"reference/builtin-functions/feel-built-in-functions-temporal",id:"version-1.12/reference/builtin-functions/feel-built-in-functions-temporal",title:"Temporal Functions",description:"now()",source:"@site/versioned_docs/version-1.12/reference/builtin-functions/feel-built-in-functions-temporal.md",sourceDirName:"reference/builtin-functions",slug:"/reference/builtin-functions/feel-built-in-functions-temporal",permalink:"/feel-scala/docs/1.12/reference/builtin-functions/feel-built-in-functions-temporal",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/master/docs/versioned_docs/version-1.12/reference/builtin-functions/feel-built-in-functions-temporal.md",tags:[],version:"1.12",frontMatter:{id:"feel-built-in-functions-temporal",title:"Temporal Functions"},sidebar:"version-1.12/Reference",previous:{title:"Context Functions",permalink:"/feel-scala/docs/1.12/reference/builtin-functions/feel-built-in-functions-context"},next:{title:"Function Provider SPI",permalink:"/feel-scala/docs/1.12/reference/developer-guide/function-provider-spi"}},u={},c=[{value:"now()",id:"now",level:2},{value:"today()",id:"today",level:2},{value:"day of week()",id:"day-of-week",level:2},{value:"day of year()",id:"day-of-year",level:2},{value:"week of year()",id:"week-of-year",level:2},{value:"month of year()",id:"month-of-year",level:2}],s={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"now"},"now()"),(0,a.kt)("p",null,"Returns the current date and time including the timezone."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters: no"),(0,a.kt)("li",{parentName:"ul"},"result: date-time with timezone")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'now()\n// date and time("2020-07-31T14:27:30@Europe/Berlin")\n')),(0,a.kt)("h2",{id:"today"},"today()"),(0,a.kt)("p",null,"Returns the current date."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters: no"),(0,a.kt)("li",{parentName:"ul"},"result: date")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'today()\n// date("2020-07-31")\n')),(0,a.kt)("h2",{id:"day-of-week"},"day of week()"),(0,a.kt)("p",null,"Returns the day of the week according to the Gregorian calendar. Note that it returns always the english name of the day."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters: ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"date"),": date/date-time"))),(0,a.kt)("li",{parentName:"ul"},"result: string")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'day of week(date("2019-09-17"))\n// "Tuesday"\n')),(0,a.kt)("h2",{id:"day-of-year"},"day of year()"),(0,a.kt)("p",null,"Returns the Gregorian number of the day within the year."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters: ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"date"),": date/date-time"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'day of year(date("2019-09-17"))\n// 260\n')),(0,a.kt)("h2",{id:"week-of-year"},"week of year()"),(0,a.kt)("p",null,"Returns the Gregorian number of the week within the year, according to ISO 8601."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters: ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"date"),": date/date-time"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'week of year(date("2019-09-17"))\n// 38\n')),(0,a.kt)("h2",{id:"month-of-year"},"month of year()"),(0,a.kt)("p",null,"Returns the month of the week according to the Gregorian calendar. Note that it returns always the english name of the month."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters: ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"date"),": date/date-time"))),(0,a.kt)("li",{parentName:"ul"},"result: string")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'month of year(date("2019-09-17"))\n// "September"\n')))}p.isMDXComponent=!0}}]);