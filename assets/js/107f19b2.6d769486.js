"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[9287],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(t),g=a,d=f["".concat(l,".").concat(g)]||f[g]||u[g]||i;return t?r.createElement(d,o(o({ref:n},p),{},{components:t})):r.createElement(d,o({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4415:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={id:"feel-string-expressions",title:"String Expressions"},o=void 0,s={unversionedId:"reference/language-guide/feel-string-expressions",id:"version-1.14/reference/language-guide/feel-string-expressions",title:"String Expressions",description:"Literal",source:"@site/versioned_docs/version-1.14/reference/language-guide/feel-string-expressions.md",sourceDirName:"reference/language-guide",slug:"/reference/language-guide/feel-string-expressions",permalink:"/feel-scala/docs/1.14/reference/language-guide/feel-string-expressions",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/main/docs/versioned_docs/version-1.14/reference/language-guide/feel-string-expressions.md",tags:[],version:"1.14",frontMatter:{id:"feel-string-expressions",title:"String Expressions"},sidebar:"version-1.14/Reference",previous:{title:"Boolean Expressions",permalink:"/feel-scala/docs/1.14/reference/language-guide/feel-boolean-expressions"},next:{title:"Numeric Expressions",permalink:"/feel-scala/docs/1.14/reference/language-guide/feel-numeric-expressions"}},l={},c=[{value:"Literal",id:"literal",level:3},{value:"Addition / Concatenation",id:"addition--concatenation",level:3}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"literal"},"Literal"),(0,a.kt)("p",null,"Creates a new string value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'"valid"\n')),(0,a.kt)("h3",{id:"addition--concatenation"},"Addition / Concatenation"),(0,a.kt)("p",null,"An addition concatenates the strings. The result is a string containing the characters of both strings."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'"foo" + "bar"\n// "foobar"\n')),(0,a.kt)("admonition",{title:"Tip ",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The concatenation is only available for string values. For other type, you can use\nthe ",(0,a.kt)("a",{parentName:"p",href:"../builtin-functions/feel-built-in-functions-conversion#string"},"string()")," function to convert\nthe value into a string first."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},'"order-" + string(123)\n'))))}u.isMDXComponent=!0}}]);