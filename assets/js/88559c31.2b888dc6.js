"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[7393],{3905:(e,t,l)=>{l.d(t,{Zo:()=>p,kt:()=>c});var n=l(7294);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function i(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function u(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var s=n.createContext({}),m=function(e){var t=n.useContext(s),l=t;return e&&(l="function"==typeof e?e(t):i(i({},t),e)),l},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var l=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),k=m(l),c=a,d=k["".concat(s,".").concat(c)]||k[c]||o[c]||r;return l?n.createElement(d,i(i({ref:t},p),{},{components:l})):n.createElement(d,i({ref:t},p))}));function c(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=l.length,i=new Array(r);i[0]=k;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var m=2;m<r;m++)i[m]=l[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,l)}k.displayName="MDXCreateElement"},3676:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>o,frontMatter:()=>r,metadata:()=>u,toc:()=>m});var n=l(7462),a=(l(7294),l(3905));const r={id:"feel-built-in-functions-list",title:"List Functions"},i=void 0,u={unversionedId:"reference/builtin-functions/feel-built-in-functions-list",id:"version-1.13/reference/builtin-functions/feel-built-in-functions-list",title:"List Functions",description:"list contains()",source:"@site/versioned_docs/version-1.13/reference/builtin-functions/feel-built-in-functions-list.md",sourceDirName:"reference/builtin-functions",slug:"/reference/builtin-functions/feel-built-in-functions-list",permalink:"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-list",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/master/docs/versioned_docs/version-1.13/reference/builtin-functions/feel-built-in-functions-list.md",tags:[],version:"1.13",frontMatter:{id:"feel-built-in-functions-list",title:"List Functions"},sidebar:"version-1.13/Reference",previous:{title:"Numeric Functions",permalink:"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-numeric"},next:{title:"Context Functions",permalink:"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-context"}},s={},m=[{value:"list contains()",id:"list-contains",level:2},{value:"count()",id:"count",level:2},{value:"min()",id:"min",level:2},{value:"max()",id:"max",level:2},{value:"sum()",id:"sum",level:2},{value:"product()",id:"product",level:2},{value:"mean()",id:"mean",level:2},{value:"median()",id:"median",level:2},{value:"stddev()",id:"stddev",level:2},{value:"mode()",id:"mode",level:2},{value:"and() / all()",id:"and--all",level:2},{value:"or() / any()",id:"or--any",level:2},{value:"sublist()",id:"sublist",level:2},{value:"append()",id:"append",level:2},{value:"concatenate()",id:"concatenate",level:2},{value:"insert before()",id:"insert-before",level:2},{value:"remove()",id:"remove",level:2},{value:"reverse()",id:"reverse",level:2},{value:"index of()",id:"index-of",level:2},{value:"union()",id:"union",level:2},{value:"distinct values()",id:"distinct-values",level:2},{value:"flatten()",id:"flatten",level:2},{value:"sort()",id:"sort",level:2}],p={toc:m};function o(e){let{components:t,...l}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"list-contains"},"list contains()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"element"),": any"))),(0,a.kt)("li",{parentName:"ul"},"result: boolean")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"list contains([1,2,3], 2) \n// true\n")),(0,a.kt)("h2",{id:"count"},"count()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"count([1,2,3]) \n// 3\n")),(0,a.kt)("h2",{id:"min"},"min()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of numbers"),(0,a.kt)("li",{parentName:"ul"},"or numbers as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"min([1,2,3]) \n// 1\n\nmin(1,2,3) \n// 1\n")),(0,a.kt)("h2",{id:"max"},"max()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of numbers"),(0,a.kt)("li",{parentName:"ul"},"or numbers as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"min([1,2,3]) \n// 3\n\nmin(1,2,3) \n// 3\n")),(0,a.kt)("h2",{id:"sum"},"sum()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of numbers"),(0,a.kt)("li",{parentName:"ul"},"or numbers as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"min([1,2,3]) \n// 6\n\nmin(1,2,3) \n// 6\n")),(0,a.kt)("h2",{id:"product"},"product()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of numbers"),(0,a.kt)("li",{parentName:"ul"},"or numbers as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"product([2, 3, 4])\n// 24\n\nproduct(2, 3, 4)\n// 24\n")),(0,a.kt)("h2",{id:"mean"},"mean()"),(0,a.kt)("p",null,"Returns the arithmetic mean (i.e. average)."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of numbers"),(0,a.kt)("li",{parentName:"ul"},"or numbers as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"mean([1,2,3])\n// 2\n\nmean(1,2,3)\n// 2\n")),(0,a.kt)("h2",{id:"median"},"median()"),(0,a.kt)("p",null,"Returns the median element of the list of numbers."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of numbers"),(0,a.kt)("li",{parentName:"ul"},"or numbers as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"median(8, 2, 5, 3, 4)\n// 4\n\nmedian([6, 1, 2, 3]) \n// 2.5\n")),(0,a.kt)("h2",{id:"stddev"},"stddev()"),(0,a.kt)("p",null,"Returns the standard deviation."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of numbers"),(0,a.kt)("li",{parentName:"ul"},"or numbers as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: number")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"stddev(2, 4, 7, 5)\n// 2.0816659994661326\n\nstddev([2, 4, 7, 5])\n// 2.0816659994661326\n")),(0,a.kt)("h2",{id:"mode"},"mode()"),(0,a.kt)("p",null,"Returns the mode of the list of numbers."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of numbers"),(0,a.kt)("li",{parentName:"ul"},"or numbers as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: list of numbers")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"mode(6, 3, 9, 6, 6) \n// [6]\n\nmode([6, 1, 9, 6, 1]) \n// [1, 6]\n")),(0,a.kt)("h2",{id:"and--all"},"and() / all()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of booleans"),(0,a.kt)("li",{parentName:"ul"},"or booleans as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: boolean")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"and([true,false])\n// false\n\nand(false,null,true)\n// false\n")),(0,a.kt)("h2",{id:"or--any"},"or() / any()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list of booleans"),(0,a.kt)("li",{parentName:"ul"},"or booleans as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: boolean")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"or([false,true])\n// true\n\nor(false,null,true)\n// true\n")),(0,a.kt)("h2",{id:"sublist"},"sublist()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start position"),": number"),(0,a.kt)("li",{parentName:"ul"},"(optional) ",(0,a.kt)("inlineCode",{parentName:"li"},"length"),": number"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"sublist([1,2,3], 2)\n// [2,3]\n\nsublist([1,2,3], 1, 2)\n// [1,2]\n")),(0,a.kt)("h2",{id:"append"},"append()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"items"),": elements as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"append([1], 2, 3)\n// [1,2,3]\n")),(0,a.kt)("h2",{id:"concatenate"},"concatenate()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lists"),": lists as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"concatenate([1,2],[3]) \n// [1,2,3]\n\nconcatenate([1],[2],[3])\n// [1,2,3]\n")),(0,a.kt)("h2",{id:"insert-before"},"insert before()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"position"),": number"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"newItem"),": any"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"insert before([1,3],1,2) \n// [1,2,3]\n")),(0,a.kt)("h2",{id:"remove"},"remove()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"position"),": number"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"remove([1,2,3], 2) \n// [1,3]\n")),(0,a.kt)("h2",{id:"reverse"},"reverse()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"reverse([1,2,3]) \n// [3,2,1]\n")),(0,a.kt)("h2",{id:"index-of"},"index of()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"match"),": any"))),(0,a.kt)("li",{parentName:"ul"},"result: list of numbers")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"index of([1,2,3,2],2) \n// [2,4]\n")),(0,a.kt)("h2",{id:"union"},"union()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lists"),": lists as varargs"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"union([1,2],[2,3])\n// [1,2,3]\n")),(0,a.kt)("h2",{id:"distinct-values"},"distinct values()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"distinct values([1,2,3,2,1])\n// [1,2,3]\n")),(0,a.kt)("h2",{id:"flatten"},"flatten()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"flatten([[1,2],[[3]], 4])\n// [1,2,3,4]\n")),(0,a.kt)("h2",{id:"sort"},"sort()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": list "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"precedes"),": function with two arguments and boolean result"))),(0,a.kt)("li",{parentName:"ul"},"result: list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"sort(list: [3,1,4,5,2], precedes: function(x,y) x < y) \n// [1,2,3,4,5]\n")))}o.isMDXComponent=!0}}]);