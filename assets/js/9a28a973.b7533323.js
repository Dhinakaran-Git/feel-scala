"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[7297],{9831:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"1.13","label":"1.13","banner":"unmaintained","badge":true,"className":"docs-version-1.13","isLast":false,"docsSidebars":{"version-1.13/Reference":[{"collapsed":true,"type":"category","label":"Introduction","items":[{"type":"link","label":"What is FEEL?","href":"/feel-scala/docs/1.13/reference/","docId":"reference/what-is-feel"}],"collapsible":true},{"collapsed":true,"type":"category","label":"Language Guide","items":[{"type":"link","label":"Data Types","href":"/feel-scala/docs/1.13/reference/language-guide/feel-data-types","docId":"reference/language-guide/feel-data-types"},{"type":"link","label":"Unary-Tests","href":"/feel-scala/docs/1.13/reference/language-guide/feel-unary-tests","docId":"reference/language-guide/feel-unary-tests"},{"type":"link","label":"Expressions","href":"/feel-scala/docs/1.13/reference/language-guide/feel-expression","docId":"reference/language-guide/feel-expression"}],"collapsible":true},{"collapsed":true,"type":"category","label":"Built-in Functions","items":[{"type":"link","label":"Conversion Functions","href":"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-conversion","docId":"reference/builtin-functions/feel-built-in-functions-conversion"},{"type":"link","label":"Boolean Functions","href":"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-boolean","docId":"reference/builtin-functions/feel-built-in-functions-boolean"},{"type":"link","label":"String Functions","href":"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-string","docId":"reference/builtin-functions/feel-built-in-functions-string"},{"type":"link","label":"Numeric Functions","href":"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-numeric","docId":"reference/builtin-functions/feel-built-in-functions-numeric"},{"type":"link","label":"List Functions","href":"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-list","docId":"reference/builtin-functions/feel-built-in-functions-list"},{"type":"link","label":"Context Functions","href":"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-context","docId":"reference/builtin-functions/feel-built-in-functions-context"},{"type":"link","label":"Temporal Functions","href":"/feel-scala/docs/1.13/reference/builtin-functions/feel-built-in-functions-temporal","docId":"reference/builtin-functions/feel-built-in-functions-temporal"}],"collapsible":true},{"collapsed":true,"type":"category","label":"Developer Guide","items":[{"type":"link","label":"Function Provider SPI","href":"/feel-scala/docs/1.13/reference/developer-guide/function-provider-spi","docId":"reference/developer-guide/function-provider-spi"},{"type":"link","label":"Value Mapper SPI","href":"/feel-scala/docs/1.13/reference/developer-guide/value-mapper-spi","docId":"reference/developer-guide/value-mapper-spi"},{"type":"link","label":"Clock SPI","href":"/feel-scala/docs/1.13/reference/developer-guide/clock-spi","docId":"reference/developer-guide/clock-spi"}],"collapsible":true}],"version-1.13/Samples":[{"type":"link","label":"Samples","href":"/feel-scala/docs/1.13/samples/","docId":"samples/samples"},{"type":"link","label":"Temporal Samples","href":"/feel-scala/docs/1.13/samples/temporal-samples","docId":"samples/temporal-samples"},{"type":"link","label":"List Samples","href":"/feel-scala/docs/1.13/samples/list-samples","docId":"samples/list-samples"},{"type":"link","label":"Context Samples","href":"/feel-scala/docs/1.13/samples/context-samples","docId":"samples/context-samples"}]},"docs":{"reference/builtin-functions/feel-built-in-functions-boolean":{"id":"reference/builtin-functions/feel-built-in-functions-boolean","title":"Boolean Functions","description":"not()","sidebar":"version-1.13/Reference"},"reference/builtin-functions/feel-built-in-functions-context":{"id":"reference/builtin-functions/feel-built-in-functions-context","title":"Context Functions","description":"get value()","sidebar":"version-1.13/Reference"},"reference/builtin-functions/feel-built-in-functions-conversion":{"id":"reference/builtin-functions/feel-built-in-functions-conversion","title":"Conversion Functions","description":"Convert a value into a different type.","sidebar":"version-1.13/Reference"},"reference/builtin-functions/feel-built-in-functions-list":{"id":"reference/builtin-functions/feel-built-in-functions-list","title":"List Functions","description":"list contains()","sidebar":"version-1.13/Reference"},"reference/builtin-functions/feel-built-in-functions-numeric":{"id":"reference/builtin-functions/feel-built-in-functions-numeric","title":"Numeric Functions","description":"decimal()","sidebar":"version-1.13/Reference"},"reference/builtin-functions/feel-built-in-functions-string":{"id":"reference/builtin-functions/feel-built-in-functions-string","title":"String Functions","description":"substring()","sidebar":"version-1.13/Reference"},"reference/builtin-functions/feel-built-in-functions-temporal":{"id":"reference/builtin-functions/feel-built-in-functions-temporal","title":"Temporal Functions","description":"now()","sidebar":"version-1.13/Reference"},"reference/developer-guide/clock-spi":{"id":"reference/developer-guide/clock-spi","title":"Clock SPI","description":"The clock is used when accessing the current time while evaluating expressions and unary tests (e.g. the builtin function now()). By default, it uses the system clock.","sidebar":"version-1.13/Reference"},"reference/developer-guide/function-provider-spi":{"id":"reference/developer-guide/function-provider-spi","title":"Function Provider SPI","description":"Functions can be invoked in expressions and unary tests. The engine includes some predefined built-in functions.","sidebar":"version-1.13/Reference"},"reference/developer-guide/value-mapper-spi":{"id":"reference/developer-guide/value-mapper-spi","title":"Value Mapper SPI","description":"The value mapper is used while evaluating expressions and unary tests to","sidebar":"version-1.13/Reference"},"reference/language-guide/feel-data-types":{"id":"reference/language-guide/feel-data-types","title":"Data Types","description":"A value can have one of the following types.","sidebar":"version-1.13/Reference"},"reference/language-guide/feel-expression":{"id":"reference/language-guide/feel-expression","title":"Expressions","description":"An expression can contain literals, operators and function calls.","sidebar":"version-1.13/Reference"},"reference/language-guide/feel-unary-tests":{"id":"reference/language-guide/feel-unary-tests","title":"Unary-Tests","description":"Unary-Tests can be used only for input entries of a decision table. They are a special kind of expression with additional operators. The operators get the value of the input expression implicitly as the first argument.","sidebar":"version-1.13/Reference"},"reference/what-is-feel":{"id":"reference/what-is-feel","title":"What is FEEL?","description":"FEEL (Friendly Enough Expression Language) is a part of the DMN specification of the OMG. It is designed to write expressions for decision tables and literal expressions in a simple way what can easily understand by business professionals and developers.","sidebar":"version-1.13/Reference"},"samples/context-samples":{"id":"samples/context-samples","title":"Context Samples","description":"Validate Data","sidebar":"version-1.13/Samples"},"samples/list-samples":{"id":"samples/list-samples","title":"List Samples","description":"Filter a List and Return the First Element","sidebar":"version-1.13/Samples"},"samples/samples":{"id":"samples/samples","title":"Samples","description":"The following pages contains example FEEL expressions to solve common problems.","sidebar":"version-1.13/Samples"},"samples/temporal-samples":{"id":"samples/temporal-samples","title":"Temporal Samples","description":"Compare a Date with Offset","sidebar":"version-1.13/Samples"}}}')}}]);