"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[9779],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(n),d=a,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||o;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3242:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294);const a=()=>r.createElement("p",null,r.createElement("span",{style:{backgroundColor:"#FC5D0D",borderRadius:"7px",color:"#fff",padding:"0.2rem",marginRight:"0.5rem"},title:"This feature is not part of the official DMN standard. It is an extension from Camunda's implementation."},"Camunda Extension"))},6463:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));n(3242);const o={id:"feel-built-in-functions-context",title:"Context functions",description:"This document outlines context functions and a few examples."},i=void 0,l={unversionedId:"reference/builtin-functions/feel-built-in-functions-context",id:"reference/builtin-functions/feel-built-in-functions-context",title:"Context functions",description:"This document outlines context functions and a few examples.",source:"@site/docs/reference/builtin-functions/feel-built-in-functions-context.md",sourceDirName:"reference/builtin-functions",slug:"/reference/builtin-functions/feel-built-in-functions-context",permalink:"/feel-scala/docs/next/reference/builtin-functions/feel-built-in-functions-context",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/main/docs/docs/reference/builtin-functions/feel-built-in-functions-context.md",tags:[],version:"current",frontMatter:{id:"feel-built-in-functions-context",title:"Context functions",description:"This document outlines context functions and a few examples."},sidebar:"Reference",previous:{title:"List functions",permalink:"/feel-scala/docs/next/reference/builtin-functions/feel-built-in-functions-list"},next:{title:"Temporal functions",permalink:"/feel-scala/docs/next/reference/builtin-functions/feel-built-in-functions-temporal"}},c={},u=[{value:"get value()",id:"get-value",level:2},{value:"get entries()",id:"get-entries",level:2},{value:"context put(context, key, value)",id:"context-putcontext-key-value",level:2},{value:"context put(context, keys, value)",id:"context-putcontext-keys-value",level:2},{value:"context merge(contexts)",id:"context-mergecontexts",level:2}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"get-value"},"get value()"),(0,a.kt)("p",null,"Returns the value of the context entry with the given key."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context"),": context"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"key"),": string"))),(0,a.kt)("li",{parentName:"ul"},"result: any")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'get value({foo: 123}, "foo") \n// 123\n')),(0,a.kt)("h2",{id:"get-entries"},"get entries()"),(0,a.kt)("p",null,"Returns the entries of the context as a list of key-value-pairs."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"parameters:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context"),": context"))),(0,a.kt)("li",{parentName:"ul"},'result: list of context which contains two entries for "key" and "value"')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'get entries({foo: 123})\n// [{key: "foo", value: 123}]\n')),(0,a.kt)("h2",{id:"context-putcontext-key-value"},"context put(context, key, value)"),(0,a.kt)("p",null,"Adds a new entry with the given key and value to the context. Returns a new context that includes the entry."),(0,a.kt)("p",null,"If an entry for the same key already exists in the context, it overrides the value."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Function signature")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"context put(context: context, key: string, value: Any): context\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'context put({x:1}, "y", 2)\n// {x:1, y:2}\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The function ",(0,a.kt)("inlineCode",{parentName:"p"},"context put()")," replaced the previous function ",(0,a.kt)("inlineCode",{parentName:"p"},"put()")," (Camunda Extension). The\nprevious function is deprecated and should not be used anymore.")),(0,a.kt)("h2",{id:"context-putcontext-keys-value"},"context put(context, keys, value)"),(0,a.kt)("p",null,"Adds a new entry with the given value to the context. The path of the entry is defined by the keys. Returns a new context that includes the entry. "),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"keys")," contains the keys ",(0,a.kt)("inlineCode",{parentName:"p"},"[k1, k2]")," then it adds the nested entry ",(0,a.kt)("inlineCode",{parentName:"p"},"k1.k2 = value")," to the context."),(0,a.kt)("p",null,"If an entry for the same keys already exists in the context, it overrides the value."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"keys")," are empty, it returns ",(0,a.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Function signature")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"context put(context: context, keys: list<string>, value: Any): context\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'context put({x:1}, ["y"], 2)\n// {x:1, y:2}\n\ncontext put({x:1, y: {z:0}}, ["y", "z"], 2)\n// {x:1, y: {z:2}}\n\ncontext put({x:1}, ["y", "z"], 2)\n// {x:1, y: {z:2}}\n')),(0,a.kt)("h2",{id:"context-mergecontexts"},"context merge(contexts)"),(0,a.kt)("p",null,"Union the given contexts. Returns a new context that includes all entries of the given contexts. "),(0,a.kt)("p",null,"If an entry for the same key already exists in a context, it overrides the value. The entries are overridden in the same order as in the list of contexts."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Function signature")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"context merge(contexts: list<context>): context\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"context merge([{x:1}, {y:2}])\n// {x:1, y:2}\n\ncontext merge([{x:1, y: 0}, {y:2}])\n// {x:1, y:2}\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The function ",(0,a.kt)("inlineCode",{parentName:"p"},"context merge()")," replaced the previous function ",(0,a.kt)("inlineCode",{parentName:"p"},"put all()")," (Camunda Extension). The\nprevious function is deprecated and should not be used anymore.")))}p.isMDXComponent=!0}}]);