"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[3436],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return t?a.createElement(f,i(i({ref:n},c),{},{components:t})):a.createElement(f,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1460:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const l={id:"feel-context-expressions",title:"Context expressions",description:"This document outlines context expressions and examples."},i=void 0,o={unversionedId:"reference/language-guide/feel-context-expressions",id:"reference/language-guide/feel-context-expressions",title:"Context expressions",description:"This document outlines context expressions and examples.",source:"@site/docs/reference/language-guide/feel-context-expressions.md",sourceDirName:"reference/language-guide",slug:"/reference/language-guide/feel-context-expressions",permalink:"/feel-scala/docs/next/reference/language-guide/feel-context-expressions",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/main/docs/docs/reference/language-guide/feel-context-expressions.md",tags:[],version:"current",frontMatter:{id:"feel-context-expressions",title:"Context expressions",description:"This document outlines context expressions and examples."},sidebar:"Reference",previous:{title:"List expressions",permalink:"/feel-scala/docs/next/reference/language-guide/feel-list-expressions"},next:{title:"Temporal expressions",permalink:"/feel-scala/docs/next/reference/language-guide/feel-temporal-expressions"}},s={},p=[{value:"Literal",id:"literal",level:3},{value:"Get entry/path",id:"get-entrypath",level:3},{value:"Filter",id:"filter",level:3},{value:"Projection",id:"projection",level:3}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"literal"},"Literal"),(0,r.kt)("p",null,"Creates a new context with the given entries. Each entry has a key and a value. The key is either a\nname or a string. The value can be any type."),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/feel-scala/docs/next/reference/language-guide/feel-variables#variable-names"},"naming conventions")," for valid key names."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  a: 1,\n  b: 2\n}\n// {a:1, b:2}\n\n{\n  "a": 1,\n  "b": 2\n}\n// {a:1, b:2}\n')),(0,r.kt)("p",null,"Inside the context, the previous entries can be accessed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  a: 2,\n  b: a * 2\n}\n// {a:2, b:4}\n")),(0,r.kt)("p",null,"A context value can embed other context values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  a: 1,\n  b: {\n    c: 2\n  }\n}\n// {a:1, b:{c:2}}\n")),(0,r.kt)("h3",{id:"get-entrypath"},"Get entry/path"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"a.b\n")),(0,r.kt)("p",null,"Accesses the entry with the key ",(0,r.kt)("inlineCode",{parentName:"p"},"b")," of the context ",(0,r.kt)("inlineCode",{parentName:"p"},"a"),". The path is separated by a dot ",(0,r.kt)("inlineCode",{parentName:"p"},"."),"."),(0,r.kt)("p",null,"If the value of the entry ",(0,r.kt)("inlineCode",{parentName:"p"},"b")," is also a context, the path can be chained (i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"a.b.c"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{a: 2}.a\n// 2\n\n{a: {b: 3}}.a\n// {b: 3}\n\n{a: {b: 3}}.a.b\n// 3\n")),(0,r.kt)("p",null,"If the context ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," doesn't contain an entry with the key ",(0,r.kt)("inlineCode",{parentName:"p"},"b"),", the expression returns ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{a: 1}.b\n// null\n\n{a: 1}.b.c\n// null\n")),(0,r.kt)("h3",{id:"filter"},"Filter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"a[c]\n")),(0,r.kt)("p",null,"Filters the list of context elements ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," by the condition ",(0,r.kt)("inlineCode",{parentName:"p"},"c"),". The result of the expression is a\nlist that contains all elements where the condition ",(0,r.kt)("inlineCode",{parentName:"p"},"c")," evaluates to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". The other elements are\nexcluded."),(0,r.kt)("p",null,"While filtering, the current element is assigned to the variable ",(0,r.kt)("inlineCode",{parentName:"p"},"item")," and its entries can be\naccessed by their key."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'[ \n  {\n    a: "p1", \n    b: 5\n  },  \n  {\n    a: "p2", \n    b: 10\n  } \n][b > 7] \n// {a: "p2", b: 10}\n')),(0,r.kt)("h3",{id:"projection"},"Projection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"a.b\n")),(0,r.kt)("p",null,"Extracts the entries with the key ",(0,r.kt)("inlineCode",{parentName:"p"},"b")," of the list of context elements ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," (i.e. a projection). It\nreturns a list containing the values of the context elements with the key ",(0,r.kt)("inlineCode",{parentName:"p"},"b"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'[\n  {\n    a: "p1",\n    b: 5\n  },\n  {\n    a: "p2",\n    b: 10\n  }\n].a     \n// ["p1", "p2"]\n')),(0,r.kt)("p",null,"If an element of the list ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," doesn't contain an entry with the key ",(0,r.kt)("inlineCode",{parentName:"p"},"b"),", the result contains ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"\nof this element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'[\n  {\n    a: "p1",\n    b: 5\n  },\n  {\n    a: "p2",\n    c: 20\n  }\n].b     \n// [5, null]\n')))}u.isMDXComponent=!0}}]);