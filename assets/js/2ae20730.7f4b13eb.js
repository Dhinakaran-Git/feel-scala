"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[4001],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(t),g=r,m=d["".concat(s,".").concat(g)]||d[g]||c[g]||l;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),r=t(6010);const l="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>g});var a=t(7462),r=t(7294),l=t(6010),i=t(2389),o=t(7392),s=t(7094),u=t(2466);const p="tabList__CuJ",c="tabItem_LNqP";function d(e){var n,t;const{lazy:i,block:d,defaultValue:g,values:m,groupId:f,className:v}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=m?m:b.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),h=(0,o.l)(y,((e,n)=>e.value===n.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===g?g:null!=(n=null!=g?g:null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)?n:b[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:E,setTabGroupChoices:N}=(0,s.U)(),[w,x]=(0,r.useState)(k),O=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=f){const e=E[f];null!=e&&e!==w&&y.some((n=>n.value===e))&&x(e)}const j=e=>{const n=e.currentTarget,t=O.indexOf(n),a=y[t].value;a!==w&&(T(n),x(a),null!=f&&N(f,String(a)))},F=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=O.indexOf(e.currentTarget)+1;t=null!=(a=O[n])?a:O[0];break}case"ArrowLeft":{var r;const n=O.indexOf(e.currentTarget)-1;t=null!=(r=O[n])?r:O[O.length-1];break}}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":d},v)},y.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:e=>O.push(e),onKeyDown:F,onFocus:j,onClick:j},i,{className:(0,l.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":w===n})}),null!=t?t:n)}))),i?(0,r.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==w})))))}function g(e){const n=(0,i.Z)();return r.createElement(d,(0,a.Z)({key:String(n)},e))}},5655:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var a=t(7462),r=(t(7294),t(3905)),l=t(5488),i=t(5162);const o={id:"bootstrapping",title:"Bootstrapping"},s=void 0,u={unversionedId:"reference/developer-guide/bootstrapping",id:"version-1.14/reference/developer-guide/bootstrapping",title:"Bootstrapping",description:"The FEEL engine can be integrated in two different ways",source:"@site/versioned_docs/version-1.14/reference/developer-guide/bootstrapping.md",sourceDirName:"reference/developer-guide",slug:"/reference/developer-guide/bootstrapping",permalink:"/feel-scala/docs/1.14/reference/developer-guide/bootstrapping",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/master/docs/versioned_docs/version-1.14/reference/developer-guide/bootstrapping.md",tags:[],version:"1.14",frontMatter:{id:"bootstrapping",title:"Bootstrapping"},sidebar:"version-1.14/Reference",previous:{title:"Introduction",permalink:"/feel-scala/docs/1.14/reference/developer-guide/developer-guide-introduction"},next:{title:"Function Provider SPI",permalink:"/feel-scala/docs/1.14/reference/developer-guide/function-provider-spi"}},p={},c=[{value:"The dependency",id:"the-dependency",level:3},{value:"Use as a library",id:"use-as-a-library",level:3},{value:"Use as script engine",id:"use-as-script-engine",level:3}],d={toc:c};function g(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The FEEL engine can be integrated in two different ways"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"as a library by calling the engine API"),(0,r.kt)("li",{parentName:"ul"},"as a script engine by using the Java's script engine API")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Have a look at the ",(0,r.kt)("a",{parentName:"p",href:"/feel-scala/docs/1.14/reference/#feel-repl"},"FEEL REPL")," for trying out FEEL expressions quickly in\ndevelopment.")),(0,r.kt)("h3",{id:"the-dependency"},"The dependency"),(0,r.kt)("p",null,"Add the engine as dependency to your project's ",(0,r.kt)("inlineCode",{parentName:"p"},"pom.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n  <groupId>org.camunda.feel</groupId>\n  <artifactId>feel-engine</artifactId>\n  <version>${VERSION}</version>\n</dependency>\n")),(0,r.kt)("p",null,"Or, download the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/camunda/feel-scala/releases"},"JAR file")," ",(0,r.kt)("em",{parentName:"p"},"(feel-engine-${VERSION}-complete.jar)")," and copy it into your application."),(0,r.kt)("h3",{id:"use-as-a-library"},"Use as a library"),(0,r.kt)("p",null,"The FEEL engine provides APIs to parse and evaluate expressions and unary-tests."),(0,r.kt)(l.Z,{defaultValue:"scala",values:[{label:"Scala",value:"scala"},{label:"Java",value:"java"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"scala",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a new instance of the class ",(0,r.kt)("inlineCode",{parentName:"p"},"FeelEngine"),". "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object MyProgram {\n  \n  val engine = new FeelEngine\n  \n  def feel(expression: String, context: Map[String, Any]) {\n    \n    val result: Either[Failure, Boolean] = engine.evalUnaryTests(expression, context)\n    // or    \n    val result: Either[Failure, Any] = engine.evalExpression(expression, context)\n  \n    // handle result\n    result\n        .right.map(value => println(s"result is: $value"))\n        .left.map(failure => println(s"failure: $failure"))\n  }  \n}\n')),(0,r.kt)("p",null,"Use the constructor arguments to configure the engine."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"new FeelEngine(configuration = Configuration(externalFunctionsEnabled = true))\n"))),(0,r.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("p",null,"Use the builder to create a new instance of the class ",(0,r.kt)("inlineCode",{parentName:"p"},"FeelEngine"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},' public class MyProgram {\n\n    public static void main(String[] args) {\n\n        final FeelEngine engine = new FeelEngine.Builder()\n            .valueMapper(SpiServiceLoader.loadValueMapper())\n            .functionProvider(SpiServiceLoader.loadFunctionProvider())\n            .build();\n\n        final Map<String, Object> variables = Map.of("x", 21);\n        final Either<FeelEngine.Failure, Object> result = engine.evalExpression(expression, variables);\n\n        if (result.isRight()) {\n            final Object value = result.right().get();\n            System.out.println("result is " + value);\n        } else {\n            final FeelEngine.Failure failure = result.left().get();\n            throw new RuntimeException(failure.message());\n        }\n    }\n}\n')),(0,r.kt)("p",null,"Use the builder to configure the engine."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"new FeelEngine.Builder().enableExternalFunctions(true).build()\n")))),(0,r.kt)("admonition",{title:"Security",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"External functions are disabled by default. They would allow calling arbitrary\ncode or accessing sensitive data. It is recommended to use the\n",(0,r.kt)("a",{parentName:"p",href:"/feel-scala/docs/1.14/reference/developer-guide/function-provider-spi"},"FunctionProvider API")," instead.")),(0,r.kt)("h3",{id:"use-as-script-engine"},"Use as script engine"),(0,r.kt)("p",null,"Calling the FEEL engine via Java's script engine\nAPI (",(0,r.kt)("a",{parentName:"p",href:"https://www.jcp.org/en/jsr/detail?id=223"},"JSR 223"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object MyProgram {\n\n  val scriptEngineManager = new ScriptEngineManager\n \n  def feel(script: String, context: ScriptContext) {\n  \n    val scriptEngine: FeelScriptEngine = scriptEngineManager.getEngineByName("feel")\n    \n    val result: Object = scriptEngine.eval(script, context)\n    // ...\n  }\n\n}\n')),(0,r.kt)("p",null,"The engine is registered under the following names:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"feel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"http://www.omg.org/spec/FEEL/20140401")," (FEEL namespace)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"feel-scala"))),(0,r.kt)("p",null,"To evaluate a unary-tests expression, use one of the following names:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"feel-unary-tests")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"feel-scala-unary-tests"))))}g.isMDXComponent=!0}}]);