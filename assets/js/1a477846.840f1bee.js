"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[9254],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,d=p["".concat(c,".").concat(m)]||p[m]||f[m]||o;return n?r.createElement(d,l(l({ref:t},s),{},{components:n})):r.createElement(d,l({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=p;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6685:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={id:"feel-built-in-functions-context",title:"Context Functions"},l=void 0,a={unversionedId:"reference/builtin-functions/feel-built-in-functions-context",id:"version-1.11/reference/builtin-functions/feel-built-in-functions-context",title:"Context Functions",description:"get value()",source:"@site/versioned_docs/version-1.11/reference/builtin-functions/feel-built-in-functions-context.md",sourceDirName:"reference/builtin-functions",slug:"/reference/builtin-functions/feel-built-in-functions-context",permalink:"/feel-scala/docs/1.11/reference/builtin-functions/feel-built-in-functions-context",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/master/docs/versioned_docs/version-1.11/reference/builtin-functions/feel-built-in-functions-context.md",tags:[],version:"1.11",frontMatter:{id:"feel-built-in-functions-context",title:"Context Functions"},sidebar:"version-1.11/Reference",previous:{title:"List Functions",permalink:"/feel-scala/docs/1.11/reference/builtin-functions/feel-built-in-functions-list"},next:{title:"Function Provider SPI",permalink:"/feel-scala/docs/1.11/reference/developer-guide/function-provider-spi"}},c={},u=[{value:"get value()",id:"get-value",level:2},{value:"get entries()",id:"get-entries",level:2}],s={toc:u};function f(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"get-value"},"get value()"),(0,i.kt)("p",null,"Returns the value of the context entry with the given key."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"parameters:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"context"),": context"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"key"),": string"))),(0,i.kt)("li",{parentName:"ul"},"result: any")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'get value({foo: 123}, "foo") \n// 123\n')),(0,i.kt)("h2",{id:"get-entries"},"get entries()"),(0,i.kt)("p",null,"Returns the entries of the context as list of key-value-pairs."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"parameters:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"context"),": context"))),(0,i.kt)("li",{parentName:"ul"},'result: list of context which contains two entries for "key" and "value"')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'get entries({foo: 123})\n// [{key: "foo", value: 123}]\n')))}f.isMDXComponent=!0}}]);