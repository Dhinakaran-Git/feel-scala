"use strict";(self.webpackChunkfeel_scala=self.webpackChunkfeel_scala||[]).push([[498],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||l;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4252:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={id:"samples",title:"Samples",slug:"/samples/"},i=void 0,o={unversionedId:"samples/samples",id:"version-1.12/samples/samples",title:"Samples",description:"Some example FEEL expressions which are used with the engine. Feel free to add your examples ;)",source:"@site/versioned_docs/version-1.12/samples/samples.md",sourceDirName:"samples",slug:"/samples/",permalink:"/feel-scala/docs/1.12/samples/",draft:!1,editUrl:"https://github.com/camunda/feel-scala/edit/main/docs/versioned_docs/version-1.12/samples/samples.md",tags:[],version:"1.12",frontMatter:{id:"samples",title:"Samples",slug:"/samples/"},sidebar:"version-1.12/Samples"},s={},c=[{value:"Date/Time Calculation",id:"datetime-calculation",level:3},{value:"Filter a List and Return the first Element",id:"filter-a-list-and-return-the-first-element",level:3},{value:"Validate Data using a Context",id:"validate-data-using-a-context",level:3},{value:"Structure Calculation using a Context",id:"structure-calculation-using-a-context",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Some example FEEL expressions which are used with the engine. Feel free to add your examples ;)"),(0,r.kt)("h3",{id:"datetime-calculation"},"Date/Time Calculation"),(0,r.kt)("p",null,"Example: check if a date is at least 6 months before another."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'date1 < date2 + duration("P6M")\n')),(0,r.kt)("h3",{id:"filter-a-list-and-return-the-first-element"},"Filter a List and Return the first Element"),(0,r.kt)("p",null,'Example: return the first packaging element which unit is "Palette".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'(data.attribute.packaging[unit = "Palette"])[1]\n')),(0,r.kt)("h3",{id:"validate-data-using-a-context"},"Validate Data using a Context"),(0,r.kt)("p",null,"Example: validate journal entries and return all violations."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  check1: {\n    error: "Document Type invalid for current year posting",\n    violations: collection[documentType = "S2" and glDate > startFiscalYear] \n  },\n  check2: {\n    error: "Document Type invalid for current year posting",\n    violations: collection[ledgerType = "GP" and foreignAmount != null] \n  },\n  result: ([check1, check2])[count(violations) > 0] \n}\n')),(0,r.kt)("h3",{id:"structure-calculation-using-a-context"},"Structure Calculation using a Context"),(0,r.kt)("p",null,"Example: calculate the minimum age of a given list of birthdays."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  age: function(birthday) (today - birthday).years,\n  ages: for birthday in birthdays return age(birthday),\n  minAge: min(ages)\n}.minAge\n")))}p.isMDXComponent=!0}}]);