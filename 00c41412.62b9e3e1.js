(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{257:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return d}));var i=t(0),r=t.n(i);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},c=Object.keys(e);for(i=0;i<c.length;i++)t=c[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(i=0;i<c.length;i++)t=c[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),s=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},f=function(e){var n=s(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},p=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,c=e.originalType,a=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),f=s(t),p=i,d=f["".concat(a,".").concat(p)]||f[p]||b[p]||c;return t?r.a.createElement(d,o(o({ref:n},l),{},{components:t})):r.a.createElement(d,o({ref:n},l))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var c=t.length,a=new Array(c);a[0]=p;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var l=2;l<c;l++)a[l]=t[l];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},64:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return s}));var i=t(3),r=t(7),c=(t(0),t(257)),a={id:"feel-built-in-functions-introduction",title:"Introduction",description:"FEEL includes many built-in functions. These functions can be invoked in expressions and unary-tests."},o={unversionedId:"reference/builtin-functions/feel-built-in-functions-introduction",id:"reference/builtin-functions/feel-built-in-functions-introduction",isDocsHomePage:!1,title:"Introduction",description:"FEEL includes many built-in functions. These functions can be invoked in expressions and unary-tests.",source:"@site/docs/reference/builtin-functions/feel-built-in-functions-introduction.md",slug:"/reference/builtin-functions/feel-built-in-functions-introduction",permalink:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-introduction",editUrl:"https://github.com/camunda/feel-scala/edit/master/docs/docs/reference/builtin-functions/feel-built-in-functions-introduction.md",version:"current",sidebar:"Reference",previous:{title:"Functions",permalink:"/feel-scala/docs/reference/language-guide/feel-functions"},next:{title:"Conversion functions",permalink:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-conversion"}},u=[],l={toc:u};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(i.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"FEEL includes many built-in functions. These functions can be invoked\nin ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/feel-scala/docs/reference/language-guide/feel-expressions-introduction"}),"expressions"),"\nand ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/feel-scala/docs/reference/language-guide/feel-unary-tests"}),"unary-tests"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'contains("me@camunda.com", ".com")\n// invoke function with positional arguments\n\ncontains(string: "me@camunda.com", match: ".de")\n// invoke function with named arguments\n')),Object(c.b)("p",null,"Read more about functions ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/feel-scala/docs/reference/language-guide/feel-functions#invocation"}),"here"),"."),Object(c.b)("p",null,"This section is split into functions based on their primary operational data type:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-boolean"}),"Boolean")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-string"}),"String")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-numeric"}),"Numeric")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-list"}),"List")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-context"}),"Context")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-temporal"}),"Temporal")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-range"}),"Range"))),Object(c.b)("p",null,"Additionally, there are ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/feel-scala/docs/reference/builtin-functions/feel-built-in-functions-conversion"}),"conversion")," functions that allow\nyou to construct new values of a data type (factory functions)."))}s.isMDXComponent=!0}}]);